<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>scraped_present->glancing</li>
    <li>scraped_present->bouncing</li>
    <li>scraped_present->grazing</li>
    <li>scraped_present->caroming</li>
    <li>scraped_present->skipping</li>
    <li>scraped_present->skating</li>
    <li>scraped_past->glanced</li>
    <li>scraped_past->bounced</li>
    <li>scraped_past->grazed</li>
    <li>scraped_past->caromed</li>
    <li>scraped_past->skipped</li>
    <li>scraped_past->skated</li>
  -->
  <Combat_DeflectIncludes.rulePack.rulesStrings>
    <li>scraped_present->golpeandole y desviandose</li>
    <li>scraped_present->rebotando</li>
    <li>scraped_present->raspando</li>
    <li>scraped_present->golpeando y rebotando</li>
    <li>scraped_present->saltandose</li>
    <li>scraped_present->pantiando en</li>
    <li>scraped_past->le ha golpeado y se ha desviado</li>
    <li>scraped_past->ha rebotado</li>
    <li>scraped_past->le ha raspado</li>
    <li>scraped_past->ha rebotado</li>
    <li>scraped_past->le ha saltado</li>
    <li>scraped_past->se ha deslizado</li>
  </Combat_DeflectIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]</li>
    <li>action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]</li>
    <li>towardsat->towards</li>
    <li>towardsat->at</li>
    <li>verb_genericattack->swung</li>
    <li>verb_genericattack->flailed</li>
    <li>verb_genericattack->thrashed</li>
    <li>tried->tried</li>
    <li>tried->attempted</li>
  -->
  <Combat_FailIncludes.rulePack.rulesStrings>
    <li>action->[INITIATOR_definite] [tried] [damaged_inf] a [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] [damaged_inf] a [RECIPIENT_definite] con [implement]</li>
    <li>action->[INITIATOR_definite] [tried] usar [implement] para [damaged_inf] a [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [genericattackverb] [INITIATOR_possessive] [WEAPON_label] a [RECIPIENT_definite]</li>
    <!-- <li>action->[INITIATOR_definite] balanceado [WEAPON_label] [INITIATOR_possessive] a [RECIPIENT_definite]</li> -->
    <li>action(p=0.3)->[INITIATOR_definite] ha [verb_genericattack] con [implement] [towardsat] [RECIPIENT_definite].</li>
    <li>action(p=0.3)->[INITIATOR_definite] ha [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] ha [verb_genericattack] con [implement]</li>
    <li>towardsat->en dirección a</li>
    <li>towardsat->a</li>
    <li>verb_genericattack->golpeado</li>
    <!-- swung -->
    <li>verb_genericattack->azotado</li>
    <!-- agitado -->
    <li>verb_genericattack->golpeado</li>
    <!-- thrashed -->
    <li>tried->intentó</li>
    <li>tried->trató</li>
  </Combat_FailIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
    <li>result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv]</li>
    <li>strikeAdv->painfully</li>
    <li>strikeAdv->horribly</li>
    <li>strikeAdv->savagely</li>
    <li>strikeAdv->viciously</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound</li>
    <li>flavortext_consequence->leaving a horrific wound</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance</li>
  -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings>
    <li>result(p=0.5)->[damaged_present] a [RECIPIENT_possessive] en [targetlist]</li>
    <li>result(p=0.1)->[damaged_present] a [RECIPIENT_possessive] en [targetlist] [adverb_flavortext]</li>
    <li>result(p=0.1)->[damaged_present] a [RECIPIENT_possessive] en [targetlist] [flavortext_situation]</li>
    <li>result(p=0.1)->[damaged_present] a [RECIPIENT_possessive] en [targetlist] [flavortext_consequence]</li>
    <li>adverb_flavortext->pocamente</li>
    <li>adverb_flavortext->brutalmente</li>
    <li>adverb_flavortext->horriblemente</li>
    <li>adverb_flavortext->agonizantemente</li>
    <li>adverb_flavortext->ferozmente</li>
    <li>adverb_flavortext->despiadadamente</li>
    <li>adverb_flavortext->salvajemente</li>
    <li>adverb_flavortext->viciosamente</li>
    <li>adverb_flavortext->sin piedad</li>
    <li>adverb_flavortext->despiadadamente</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->provocando una explosión de sangre</li>
    <li>flavortext_situation(recipient_flesh==Mechanoid)->provocando una explosión de chatarra</li>
    <li>flavortext_situation->sin emoción</li>
    <li>flavortext_situation(p=0.4)->mientras viste de blanco</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mientras viste salvajemente</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mientras lleva puesto un [AdjectiveBadass] aspecto</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mientras hace muecas</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mientras rie</li>
    <li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mientras sonríe</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una herida desagradable</li>
    <li>flavortext_consequence->dejando una herida horrible</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->haciendo que [RECIPIENT_objective] [wince] de [painevent]</li>
    <li>flavortext_consequence(p=0.2)->sacando a [RECIPIENT_objective] de balance</li>
  </Combat_MeleeDamageIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[action], [result].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>targetlist(recipient_part_count==1)->[recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[recipient_part0_label] and [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], and [recipient_part2_label]</li>
    <li>targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], and [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->wounding</li>
    <li>damaged_present(deflected!=True)->injuring</li>
    <li>destroyed(p=0.5)->destroyed</li>
    <li>destroyed(p=0.5)->demolished</li>
    <li>destroyed(p=0.5)->ruined</li>
    <li>destroyed(p=0.5)->wrecked</li>
    <li>wince(recipient_flesh==Normal)->wince</li>
    <li>wince(recipient_flesh==Normal)->grimace</li>
    <li>wince(recipient_flesh==Normal)->cringe</li>
    <li>wince(recipient_flesh==Normal)->groan</li>
    <li>wince(recipient_flesh!=Mechanoid)->scream</li>
    <li>wince(recipient_flesh!=Mechanoid)->shout</li>
    <li>wince->recoil</li>
    <li>wince->stumble</li>
    <li>painstate->in</li>
    <li>painstate->with</li>
    <li>painstate->from the</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] pain</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agony</li>
    <li>painevent(recipient_flesh==Normal)->with misery</li>
    <li>painevent->from the injury</li>
    <li>painevent->from the wound</li>
    <li>to->to</li>
    <li>to->into</li>
  -->
  <Combat_MeleeIncludes.rulePack.rulesStrings>
    <li>r_logentry->[action], [result].</li>
    <li>r_logentry(p=0.2)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->un/una [WEAPON_label]s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->un/una [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=1)->[INITIATOR_possessive] [adjective_bodypart] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>adjective_bodypart->duro</li>
    <li>adjective_bodypart->fuerte</li>
    <li>adjective_bodypart->poderoso</li>
    <li>adjective_bodypart->vigoroso</li>
    <li>adjective_bodypart->poderoso</li>
    <li>adjective_bodypart->escabroso</li>
    <li>adjective_bodypart->fornido</li>
    <li>adjective_bodypart->robusto</li>
    <li>adjective_bodypart->solido</li>
    <li>adjective_bodypart->duro</li>
    <li>adjective_bodypart(initiator_flesh==True)->calloso</li>
    <li>adjective_bodypart->firme</li>
    <li>targetlist(recipient_part_count==1Exploding)->[RECIPIENT_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[RECIPIENT_part0_label] y [RECIPIENT_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[RECIPIENT_part0_label], [RECIPIENT_part1_label], y [RECIPIENT_part2_label]</li>
    <li>targetlist->[RECIPIENT_part0_label], [RECIPIENT_part1_label], [RECIPIENT_part2_label], y [RECIPIENT_part3_label]</li>
    <li>damaged_present(deflected!=True)->hiriendo</li>
    <li>damaged_present(deflected!=True)->hiriendo</li>
    <li>destroyed(p=0.5)->destruido</li>
    <li>destroyed(p=0.5)->demolido</li>
    <li>destroyed(p=0.5)->arruinado</li>
    <li>destroyed(p=0.5)->destrozado</li>
    <li>wince(recipient_flesh==Normal)->haga una mueca</li>
    <li>wince(recipient_flesh==Normal)->haga una mueca</li>
    <li>wince(recipient_flesh==Normal)->se encoja</li>
    <li>wince(recipient_flesh==Normal)->gima</li>
    <li>wince(recipient_flesh!=Mechanoid)->chille</li>
    <li>wince(recipient_flesh!=Mechanoid)->grite</li>
    <li>wince->se retuerza</li>
    <li>wince->tropieze</li>
    <li>painstate->en</li>
    <li>painstate->con</li>
    <li>painstate->por el(la)</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] panico</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agonia</li>
    <li>painevent(recipient_flesh==Normal)->con miseria</li>
    <li>painevent->por la herida</li>
    <li>painevent->por la herida</li>
    <li>to->a</li>
    <li>to->en</li>
  </Combat_MeleeIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->wielding</li>
    <li>wielding(p=3)->using</li>
    <li>wielding(p=2)->handling</li>
    <li>wielding->brandishing</li>
    <li>wielding->manipulating</li>
    <li>using(p=4)->using</li>
    <li>using->driving</li>
    <li>using->thrusting</li>
    <li>using->utilizing</li>
    <li>using->moving</li>
    <li>skillAdv(INITIATOR_skill<=3)->incompetently</li>
    <li>skillAdv(INITIATOR_skill<=3)->ineptly</li>
    <li>skillAdv(INITIATOR_skill<=3)->wildly</li>
    <li>skillAdv(INITIATOR_skill<=3)->randomly</li>
    <li>skillAdv(INITIATOR_skill<=3)->flailingly</li>
    <li>skillAdv(INITIATOR_skill<=4)->awkwardly</li>
    <li>skillAdv(INITIATOR_skill<=4)->clumsily</li>
    <li>skillAdv(INITIATOR_skill<=5)->fearfully</li>
    <li>skillAdv(INITIATOR_skill<=5)->falteringly</li>
    <li>skillAdv(INITIATOR_skill<=5)->foolishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->hesitantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->reluctantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->slowly</li>
    <li>skillAdv(INITIATOR_skill<=6)->tentatively</li>
    <li>skillAdv(INITIATOR_skill<=6)->inexpertly</li>
    <li>skillAdv(INITIATOR_skill<=6)->amateurishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->timidly</li>
    <li>skillAdv(INITIATOR_skill<=8)->enthusiastically</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->proficiently</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->competently</li>
    <li>skillAdv(INITIATOR_skill>=8)->professionally</li>
    <li>skillAdv(INITIATOR_skill>=8)->deftly</li>
    <li>skillAdv(INITIATOR_skill>=8)->aptly</li>
    <li>skillAdv(INITIATOR_skill>=8)->cleverly</li>
    <li>skillAdv(INITIATOR_skill>=8)->dexterously</li>
    <li>skillAdv(INITIATOR_skill>=8)->skillfully</li>
    <li>skillAdv(INITIATOR_skill>=10)->adeptly</li>
    <li>skillAdv(INITIATOR_skill>=10)->slickly</li>
    <li>skillAdv(INITIATOR_skill>=12)->expertly</li>
    <li>skillAdv(INITIATOR_skill>=12)->precisely</li>
    <li>skillAdv(INITIATOR_skill>=14)->masterfully</li>
    <li>skillAdv(INITIATOR_skill>=16)->artistically</li>
    <li>skillAdv(INITIATOR_skill>=16)->gracefully</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mechanically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->robotically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->directly</li>
  -->
  <Combat_SkillIncludes.rulePack.rulesStrings>TODO</Combat_SkillIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label]</li>
  -->
  <Combat_WoundIncludes.rulePack.rulesStrings>
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[RECIPIENT_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[RECIPIENT_part_destroyed0_label] y [RECIPIENT_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], y [RECIPIENT_part_destroyed2_label]</li>
    <li>destroyed_targets->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], [RECIPIENT_part_destroyed2_label], y [RECIPIENT_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[RECIPIENT_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[RECIPIENT_part_damaged0_label] y [RECIPIENT_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], y [RECIPIENT_part_damaged2_label]</li>
    <li>damaged_targets->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], [RECIPIENT_part_damaged2_label], y [RECIPIENT_part_damaged3_label]</li>
    <li>expertly->expertamente</li>
    <li>expertly->expertamente</li>
    <li>expertly->hábilmente</li>
    <li>expertly->hábilmente</li>
    <li>expertly->hábilmente</li>
    <li>expertly->hábilmente</li>
    <li>expertly->profesionalmente</li>
    <li>expertly->acertadamente</li>
    <li>expertly->hábilmente</li>
    <li>expertly->hábilmente</li>
    <li>expertly->magistralmente</li>
    <li>expertly->artisticamente</li>
    <li>expertly->con habilidad</li>
    <li>expertly->con impresionante experiencia</li>
    <li>expertly->con estilo</li>
    <li>expertly->con cuidado</li>
    <li>expertly->con precisión</li>
    <li>expertly->con habilidad</li>
    <li>expertly->con fuerza</li>
    <li>expertly->con destreza</li>
    <li>expertly->con maestría</li>
    <li>expertly->con talento artístico</li>
    <li>expertly->con profesionalismo</li>
    <li>expertly->como un virtuoso</li>
    <li>expertly->como un experto</li>
    <li>expertly->como un maestro</li>
    <li>expertly->como un artista</li>
    <li>expertly->como un profesional</li>
    <li>expert->experto</li>
    <li>expert->adepto</li>
    <li>expert->agil</li>
    <li>expert->hábil</li>
    <li>expert->diestro</li>
    <li>expert->rapido</li>
    <li>expert->profesional</li>
    <li>expert->apto</li>
    <li>expert->diestro</li>
    <li>expert->inteligente</li>
    <li>expert->maestro</li>
    <li>expert->artista</li>
  </Combat_WoundIncludes.rulePack.rulesStrings>
  
</LanguageData>